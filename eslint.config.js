import js from '@eslint/js';
import { defineConfig } from 'eslint/config';
import ts from 'typescript-eslint';

export default defineConfig([
  js.configs.recommended,
  ts.configs.recommended,
  {
    files: [
      '**/*.[cm][jt]s',
      '**/*.[jt]sx',
      '**/*.[jt]s',
    ],
    rules: {
      'array-element-newline': [ 1, 'consistent' ],
      'array-bracket-newline': [ 1, 'consistent' ],
      'array-bracket-spacing': [ 1, 'always', {
        singleValue: false,
        objectsInArrays: false,
        arraysInArrays: false,
      }],
      'arrow-parens': [ 1, 'as-needed', {
        requireForBlockBody: true,
      }],
      'arrow-spacing': [ 1, {
        before: true,
        after: true,
      }],
      'block-scoped-var': 1,
      'block-spacing': [ 1, 'always' ],
      'brace-style': [ 1, '1tbs', { allowSingleLine: true }],
      'comma-dangle': [ 1, 'always-multiline' ],
      'comma-spacing': [ 1, { before: false, after: true }],
      'comma-style': [ 1, 'last' ],
      'computed-property-spacing': [ 1, 'never' ],
      'constructor-super': 1,
      'curly': [ 1, 'all' ],
      'dot-notation': 1,
      'eol-last': 1,
      'for-direction': 1,
      'func-call-spacing': [ 1, 'never' ],
      'function-paren-newline': [ 1, 'consistent' ],
      'getter-return': 2,
      'implicit-arrow-linebreak': [ 1, 'beside' ],
      'indent': [ 1, 2, { SwitchCase: 1 }],
      'key-spacing': [
        1,
        { mode: 'strict', beforeColon: false, afterColon: true },
      ],
      'keyword-spacing': [ 1, { before: true, after: true }],
      'linebreak-style': [ 1, 'unix' ],
      'lines-between-class-members': [ 1, 'always', {
        exceptAfterSingleLine: true,
      }],
      'new-cap': [ 1, {
        capIsNewExceptions: [

        ],
      }],
      'new-parens': 1,
      'no-bitwise': 1,
      'no-console': 1,
      'no-debugger': 2,
      'no-dupe-args': 2,
      'no-dupe-class-members': 2,
      'no-dupe-keys': 2,
      'no-duplicate-case': 2,
      'no-else-return': [ 2, { allowElseIf: false }],
      'no-empty-character-class': 2,
      'no-eval': [ 1, { allowIndirect: false }],
      'no-ex-assign': 1,
      'no-extra-bind': 1,
      'no-extra-boolean-cast': 1,
      'no-extra-label': 1,
      'no-extra-parens': [ 1, 'functions' ],
      'no-extra-semi': 1,
      'no-floating-decimal': 2,
      'no-func-assign': 2,
      'no-global-assign': 2,
      'no-implied-eval': 2,
      'no-inner-declarations': 2,
      'no-invalid-regexp': 2,
      'no-lonely-if': 2,
      'no-misleading-character-class': 2,
      'no-multi-spaces': 2,
      'no-multiple-empty-lines': [ 2, { max: 1 }],
      'no-new-func': 2,
      'no-new-wrappers': 2,
      'no-obj-calls': 2,
      'no-param-reassign': 2,
      'no-redeclare': [ 2, { builtinGlobals: true }],
      'no-regex-spaces': 2,
      'no-script-url': 2,
      'no-self-compare': 2,
      'no-shadow-restricted-names': 2,
      'no-sparse-arrays': 2,
      'no-template-curly-in-string': 1,
      'no-this-before-super': 2,
      'no-throw-literal': 2,
      'no-undef': 1,
      'no-undef-init': 1,
      'no-unmodified-loop-condition': 2,
      'no-unneeded-ternary': 1,
      'no-unsafe-finally': 0,
      'no-unsafe-negation': 2,
      'no-unused-labels': 1,
      'no-use-before-define': [ 1, {
        classes: false,
        functions: true,
        variables: true,
      }],
      'no-var': 1,
      'no-whitespace-before-property': 1,
      'no-with': 1,
      'object-curly-newline': [ 1, {
        multiline: true,
        consistent: true,
      }],
      'object-curly-spacing': [ 1, 'always' ],
      'one-var': [ 1, 'never' ],
      'operator-linebreak': [ 1, 'before' ],
      'padded-blocks': [ 1, { blocks: 'never' }],
      'prefer-arrow-callback': 1,
      'prefer-template': 1,
      'quote-props': [ 1, 'consistent-as-needed' ],
      'quotes': [ 1, 'single' ],
      'rest-spread-spacing': [ 1, 'never' ],
      'semi-spacing': [ 1, { before: false, after: true }],
      'semi': [ 1, 'always' ],
      'space-before-blocks': [ 1, 'always' ],
      'space-before-function-paren': [ 1, 'never' ],
      'space-in-parens': [ 1, 'never' ],
      'space-infix-ops': [ 1, { int32Hint: true }],
      'space-unary-ops': [ 1, { words: true, nonwords: false }],
      'switch-colon-spacing': [ 1, { before: false, after: true }],
      'template-curly-spacing': [ 1, 'never' ],
      'unicode-bom': [ 1, 'never' ],
      'use-isnan': 1,
      'wrap-iife': [ 1, 'inside' ],
      'yoda': 1,
    },
  },
]);
